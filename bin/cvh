#!/usr/bin/env bash
set -euo pipefail

# Simple voice hooks launcher for single session system

REPO="/home/whysw/Documents/mcp-voice-hooks"
DEFAULT_PORT=5111

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    echo -e "${GREEN}[CVH]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[CVH]${NC} $1"
}

error() {
    echo -e "${RED}[CVH]${NC} $1" >&2
}

# Build if necessary
ensure_built() {
    if [[ ! -f "${REPO}/dist/unified-server.js" ]]; then
        log "Building project..."
        cd "$REPO"
        if [[ ! -f package-lock.json ]]; then
            npm install
        fi
        npm run build
        log "Build complete"
    fi
}

# Setup environment
setup_environment() {
    export MCP_VOICE_HOOKS_PORT="${MCP_VOICE_HOOKS_PORT:-$DEFAULT_PORT}"
    log "Using port ${BLUE}$MCP_VOICE_HOOKS_PORT${NC}"
}

# Register with Claude MCP
register_mcp() {
    log "Registering with Claude MCP (local scope)"
    
    # Remove existing registration (ignore errors)
    claude mcp remove voice-hooks -s local >/dev/null 2>&1 || true
    
    # Add with current environment
    claude mcp add voice-hooks env \
        MCP_VOICE_HOOKS_PORT="${MCP_VOICE_HOOKS_PORT}" \
        node "${REPO}/dist/unified-server.js" -- --mcp-managed
}

# Display instance information
show_instance_info() {
    log "Voice Hooks Configuration:"
    echo "  Port: $MCP_VOICE_HOOKS_PORT"
    echo "  UI: http://localhost:$MCP_VOICE_HOOKS_PORT"
    echo "  Mode: Single session"
}

# Main execution
main() {
    log "Voice Hooks Launcher (Single Session)"
    
    # Ensure we're in the right directory and project is built
    ensure_built
    
    # Setup environment
    setup_environment
    
    # Show configuration
    show_instance_info
    
    # Register with MCP
    register_mcp
    
    # Launch Claude
    log "Launching Claude Code..."
    exec claude "$@"
}

# Show help
show_help() {
    cat <<EOF
Voice Hooks Launcher (cvh) - Single Session Mode

USAGE:
    cvh [CLAUDE_ARGS...]

DESCRIPTION:
    Sets up voice hooks with a single unified session.
    All voice input goes through one global queue.

EXAMPLES:
    cvh                    # Start Claude with voice hooks
    cvh --resume           # Resume previous session with voice hooks
    cvh --help            # Show Claude help (after setup)

CONFIGURATION:
    Port: Set MCP_VOICE_HOOKS_PORT environment variable (default: 5111)
    UI:   Accessible at http://localhost:5111 (or custom port)

EOF
}

# Handle arguments
case "${1:-}" in
    --help|-h)
        show_help
        exit 0
        ;;
    --version|-v)
        echo "CVH Voice Hooks Launcher - Single Session"
        echo "Repository: $REPO"
        exit 0
        ;;
    *)
        main "$@"
        ;;
esac